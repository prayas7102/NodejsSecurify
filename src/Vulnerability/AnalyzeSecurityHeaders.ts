import { DatasetSample } from './DatasetSample';

// Example dataset (Replace this with your actual dataset)
export const dataset: DatasetSample[] = [
    {
        'code': `app.use((req, res, next) => {
            res.setHeader('X-Content-Type-Options', 'nosniff');
            next();
          });
          `,
        'label': 0
    },
    {
        'code': `app.use((req, res, next) => {
            res.setHeader('Cache-Control', 'public, max-age=3600');
            next();
          });
          `,
        'label': 1
    },
    {
        'code': `app.use((req, res, next) => {
            res.setHeader('X-Frame-Options', 'DENY');
            next();
          });
          `,
        'label': 0
    },
    {
        'code': `app.use((req, res, next) => {
            res.setHeader('Feature-Policy', "geolocation *");
            next();
          });
          `,
        'label': 1
    },{
        'code': `app.use((req, res, next) => {
            res.setHeader('X-XSS-Protection', '1; mode=block');
            next();
          });
          `,
        'label': 0
    },
    {
        'code': `app.use((req, res, next) => {
            res.setHeader('Referrer-Policy', 'unsafe-url');
            next();
          });
          `,
        'label': 1
    },{
        'code': `app.use((req, res, next) => {
            res.setHeader('Content-Security-Policy', "default-src 'self'");
            next();
          });
          `,
        'label': 0
    },
    {
        'code': `app.use((req, res, next) => {
            res.setHeader('Strict-Transport-Security', 'max-age=31536000');
            next();
          });
          `,
        'label': 1
    },{
        'code': `app.use((req, res, next) => {
            res.setHeader('Strict-Transport-Security', 'max-age=31536000; includeSubDomains; preload');
            next();
          });
          `,
        'label': 0
    },
    {
        'code': `app.use((req, res, next) => {
            res.setHeader('Content-Security-Policy', "script-src 'self'");
            next();
          });
          `,
        'label': 1
    },{
        'code': `app.use((req, res, next) => {
            res.setHeader('Referrer-Policy', 'same-origin');
            next();
          });
          `,
        'label': 0
    },
    {
        'code': `app.use((req, res, next) => {
            res.setHeader('X-XSS-Protection', '0');
            next();
          });
          `,
        'label': 1
    },{
        'code': `app.use((req, res, next) => {
            res.setHeader('Feature-Policy', "geolocation 'self'; microphone 'self'");
            next();
          });
          `,
        'label': 0
    },
    {
        'code': `app.use((req, res, next) => {
            res.setHeader('X-Frame-Options', 'SAMEORIGIN');
            next();
          });
          `,
        'label': 1
    },{
        'code': `app.use((req, res, next) => {
            res.setHeader('Cache-Control', 'no-store, no-cache, must-revalidate, proxy-revalidate');
            next();
          });
          `,
        'label': 0
    },
    {
        'code': `app.use((req, res, next) => {
            res.setHeader('X-Content-Type-Options', 'nope');
            next();
          });
          `,
        'label': 1
    },{
        'code': `app.use((req, res, next) => {
            res.setHeader('Public-Key-Pins', 'pin-sha256="base64=="; max-age=5184000; includeSubDomains');
            next();
          });
          `,
        'label': 0
    },
    {
        'code': `app.use((req, res, next) => {
            res.setHeader('Public-Key-Pins', 'pin-sha256="invalid"; max-age=5184000');
            next();
          });
          `,
        'label': 1
    },{
        'code': `app.use((req, res, next) => {
            res.setHeader('Expect-CT', 'enforce, max-age=2592000, report-uri="https://example.com/report-ct"');
            next();
          });
          `,
        'label': 0
    },
    {
        'code': `app.use((req, res, next) => {
            res.setHeader('Expect-CT', 'enforce');
            next();
          });
          `,
        'label': 1
    },
]